Problem Link : https://www.geeksforgeeks.org/problems/check-if-linked-list-is-pallindrome/1


class Solution:
    def isPalindrome(self, head):
        slow, fast = head, head
        while fast and fast.next:
            slow, fast = slow.next, fast.next.next
        
        rhead = self.reverse(slow)
        while head and rhead:
            if head.data != rhead.data:
                return False
            head = head.next
            rhead = rhead.next
        return True 
    
    def reverse(self, h):
        prev = None 
        curr = h 
        while curr:
            next = curr.next
            curr.next = prev 
            prev = curr
            curr = next
        return prev 
        
''' time complexity : O(n)
    space complexity : O(1)
'''
